{"version":3,"sources":["webpack://HumanizeDate/webpack/universalModuleDefinition","webpack://HumanizeDate/webpack/bootstrap","webpack://HumanizeDate/./index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","HumanizeDate","this","from","Date","to","units","seconds","minutes","hours","days","weeks","months","years","quarters","date","options","year","month","day","toLocaleDateString","navigator","language","dateA","dateB","constructor","getDates","unit","Error","keys","Intl","RelativeTimeFormat","numeric","format","Math","abs","getMonth","getFullYear","Array","isArray"],"mappings":"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","file":"humanize-date.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"HumanizeDate\"] = factory();\n\telse\n\t\troot[\"HumanizeDate\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class HumanizeDate {\n\n    constructor() {\n        this.from = new Date();\n        this.to = new Date();\n        this.units = {\n            seconds: this.seconds,\n            minutes: this.minutes,\n            hours: this.hours,\n            days: this.days,\n            weeks: this.weeks,\n            months: this.months,\n            years: this.years,\n            quarters: this.quarters,\n        }\n    }\n\n    /**\n    * Convert date to human readable\n    * @param date {String|Number|Date} - Date want format\n    * @param options {Object} - Check options here: https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleDateString\n    */\n    toLocale(date = new Date(), options = { year: 'numeric', month: 'long', day: 'numeric' }) {\n        return new Date(date).toLocaleDateString(navigator.language, options);\n    }\n\n    /**\n     * Set dates\n     * @param dateA {String|Number|Date|Array|Object}\n     * @param dateB= {String|Number|Date}\n     * @returns {HumanizeDate}\n     */\n    dates(dateA, dateB) {\n        const { from, to } = this.constructor.getDates(dateA, dateB);\n        this.from = new Date(from);\n        this.to = new Date(to);\n        return this;\n    }\n\n    /**\n     * Convert difference of two dates in relative time human readable\n     * @param unit {String} - Unit as seconds, minutes, hours, weeks, months, years\n     * @returns {string}\n     */\n    within(unit = 'seconds') {\n        if (!(unit in this.units)) throw new Error(`The available units are ${Object.keys(this.units)}`);\n        return new Intl.RelativeTimeFormat(navigator.language, { numeric: 'auto' }).format(this.units[unit](this.from, this.to), unit);\n    }\n\n    /**\n     * Convert difference of two dates in relative time human readable\n     * @param unit {String} - Unit as seconds, minutes, hours, weeks, months, years\n     * @returns {string}\n     */\n    ago(unit = 'seconds') {\n        if (!(unit in this.units)) throw new Error(`The available units are ${Object.keys(this.units)}`);\n        return new Intl.RelativeTimeFormat(navigator.language, { numeric: 'auto' }).format(this.units[unit](this.from, this.to) * -1, unit);\n    }\n\n    /**\n     * Get difference between dates in seconds\n     * @param from= {String|Number|Date} - The older date\n     * @param to= {String|Number|Date} - The newer date\n     * @returns {number}\n     */\n    seconds(from, to) {\n        return Math.abs(new Date(to || this.to) - new Date(from || this.from)) / 1000;\n    }\n\n    /**\n     * Get difference between dates in minutes\n     * @param from= {String|Number|Date} - The older date\n     * @param to= {String|Number|Date} - The newer date\n     * @returns {number}\n     */\n    minutes(from, to) {\n        return Math.abs(new Date(to || this.to) - new Date(from || this.from)) / (1000 * 60);\n    }\n\n    /**\n     * Get difference between dates in hours\n     * @param from= {String|Number|Date} - The older date\n     * @param to= {String|Number|Date} - The newer date\n     * @returns {number}\n     */\n    hours(from, to) {\n        return Math.abs(new Date(to || this.to) - new Date(from || this.from)) / (1000 * 60 * 60);\n    }\n\n    /**\n     * Get difference between dates in days\n     * @param from= {String|Number|Date} - The older date\n     * @param to= {String|Number|Date} - The newer date\n     * @returns {number}\n     */\n    days(from, to) {\n        return Math.abs(new Date(to || this.to) - new Date(from || this.from)) / (1000 * 60 * 60 * 24);\n    }\n\n    /**\n     * Get difference between dates in weeks\n     * @param from= {String|Number|Date} - The older date\n     * @param to= {String|Number|Date} - The newer date\n     * @returns {number}\n     */\n    weeks(from, to) {\n        return Math.abs(new Date(to || this.to) - new Date(from || this.from)) / (1000 * 60 * 60 * 24 * 7 * 4);\n    }\n\n    /**\n     * Get difference between dates in months\n     * @param from= {String|Number|Date} - The older date\n     * @param to= {String|Number|Date} - The newer date\n     * @returns {number}\n     */\n    months(from, to) {\n        return Math.abs((this.years(from, to) * 12) + (new Date(to || this.to).getMonth() - new Date(from || this.from).getMonth()));\n    }\n\n    /**\n     * Get difference between dates in years\n     * @param from= {String|Number|Date} - The older date\n     * @param to= {String|Number|Date} - The newer date\n     * @returns {number}\n     */\n    years(from, to) {\n        return Math.abs(new Date(to || this.to).getFullYear() - new Date(from || this.from).getFullYear());\n    }\n\n    /**\n     * Get difference between dates in quarters\n     * @param from= {String|Number|Date} - The older date\n     * @param to= {String|Number|Date} - The newer date\n     * @returns {number}\n     */\n    quarters(from, to) {\n        return Math.abs(this.months(from, to) / 4);\n    }\n\n\n    /**\n     * Get dates based on parameters\n     * @param from {String|Number|Date|Array|Object}\n     * @param to {String|Number|Date}\n     * @returns {{from: *, to: *}|{from: (string|number), to}}\n     */\n    static getDates(from, to) {\n        if (!(Array.isArray(from) || typeof from === 'object') || (typeof from === 'object' && 'getTime' in from)) return {from, to};\n        else if (Array.isArray(from)) return {from: from[0], to: from[1]};\n        else if (typeof from === 'object') return {from: from[Object.keys(from)[0]], to: from[Object.keys(from)[1]]};\n    }\n}\n\nif (typeof define === 'function' && define.amd) {\n    define('HumanizeDate', [], function() {\n        return HumanizeDate;\n    });\n}\n\nif (typeof module !== 'undefined') {\n    module.exports = HumanizeDate;\n}\n"],"sourceRoot":""}